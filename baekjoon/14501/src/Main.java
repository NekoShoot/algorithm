
public class Main {

	public static void main(String[] args) {
		// 퇴사 문제
		/* 알고리즘 아이디어
		 * 오늘(0) + N+1 = 퇴사 날
		 * 1 <= N <= 15
		 * 상담에 걸리는 일 수 안에 퇴사 날이 있으면 그 상담은 불가능
		 * -> if i(날짜) + Ti - 1(일수) >= N+1이면, Pi(수익) = 0으로 하기?
		 * 상담에 걸리는 일 수 안에 있는 다른 상담은 불가능
		 * if i 고르면 -> i + Ti가 될 때까지 continue?
		 * 
		 * < 핵심 >
		 * 최대 수익 구하기
		 * how to ?
		 * 방식) i_n = (i_(x-1) + Ti_(x-1))를 해나가며 (i_x + Ti_x) < (N+1) 일 때까지 시행하는 모든 경우의 수를 체크
		 * 시행하는 한 세트(x값이 1개 돌아가는 세트)마다 tmp에 값을 저장하고, 맨 마지막에 tmp와 sum의 값을 비교해서 큰 쪽을 sum에 저장
		 * 최종적으로 sum에 저장된 값을 출력
		 * 
		 * 1. a1을 고른다
		 * 1-1. 1 + T1 - 1 <= N+1인지 검사한다. True라면 0(sum 기본값)을 반환하고 종료한다.
		 * 1-2. P1을 sum에 더한다
		 * 1-3. 1 + T1으로 점프한다
		 * 1-4. a(1+T1)을 고른다
		 * 
		 */

	}

}
